image: python:3.12

pipelines:
  default:
    - step:
        name: Build and Upload EXE to Google Drive
        caches:
          - pip
        script:
          - python -m pip install --upgrade pip
          - pip install pyinstaller google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client
          
          # Step 1: Create output directory
          - mkdir -p output

          # Step 2: Build the executable
          - pyinstaller --onefile my_script.py
          
          # Step 3: Move the generated executable to the output directory
          - if [ -f output/my_executable.exe ]; then rm output/my_executable.exe; fi
          - mv dist/my_script.exe output/my_executable.exe

          # Step 4: Upload the EXE to Google Drive
          - |
            python <<EOF
            from googleapiclient.discovery import build
            from google.oauth2.service_account import Credentials
            from googleapiclient.http import MediaFileUpload
            import os

            SCOPES = ['https://www.googleapis.com/auth/drive.file']
            creds = Credentials.from_service_account_file('credentials.json', scopes=SCOPES)

            drive_service = build('drive', 'v3', credentials=creds)
            folder_id = '1uNNApyN0kPFnEUSpo94nfA90Fa3mNmf1'
            file_metadata = {'name': 'my_executable.exe', 'parents': [folder_id]}
            media = MediaFileUpload('output/my_executable.exe', mimetype='application/vnd.microsoft.portable-executable')
            file = drive_service.files().create(body=file_metadata, media_body=media, fields='id').execute()

            print(f"File uploaded successfully with ID: {file.get('id')}")
            EOF

        artifacts:
          - output/**
