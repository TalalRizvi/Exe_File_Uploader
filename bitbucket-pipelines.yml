name: Build and Upload EXE

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

    - name: Create output directory
      run: mkdir -p output

    - name: Build the executable
      run: |
        pyinstaller --onefile my_script.py
        echo "Contents of dist directory:"
        ls dist  # List the contents of the dist directory to verify the EXE was created
        echo "Contents of output directory before moving the EXE:"
        ls output || echo "Output directory is empty or does not exist"

    - name: Ensure output directory exists
      run: mkdir -p output  # Ensure the output directory exists

    - name: Move the executable to output directory
      run: |
        if [ -f output/my_executable.exe ]; then rm output/my_executable.exe; fi
        mv dist/my_script.exe output/my_executable.exe

    - name: Upload the EXE to Google Drive
      env:
        GDRIVE_CREDENTIALS_JSON: ${{ secrets.GDRIVE_CREDENTIALS_JSON }}
      run: |
        echo "$GDRIVE_CREDENTIALS_JSON" > credentials.json
        python <<EOF
        from googleapiclient.discovery import build
        from google.oauth2.service_account import Credentials
        from googleapiclient.http import MediaFileUpload

        SCOPES = ['https://www.googleapis.com/auth/drive.file']
        creds = Credentials.from_service_account_file('credentials.json', scopes=SCOPES)

        drive_service = build('drive', 'v3', credentials=creds)
        folder_id = '1uNNApyN0kPFnEUSpo94nfA90Fa3mNmf1'
        file_metadata = {'name': 'my_executable.exe', 'parents': [folder_id]}
        media = MediaFileUpload('output/my_executable.exe', mimetype='application/vnd.microsoft.portable-executable')
        file = drive_service.files().create(body=file_metadata, media_body=media, fields='id').execute()

        print(f"File uploaded successfully with ID: {file.get('id')}")
        EOF

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: exe-files
        path: output/**
